<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="rmFoo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAOQSURBVDhPRZP9T9pXFMa//9Gm9Qdwa6xZsywue6tLjTNptlpda7GypK2NKPiC0zhr6uQL1paJ
        CMqkUtECRZD6isVCQeRFlCEoCrRiKUNaRXl2SdbtJk9yc5Pz5J7PeQ5F/Xvyq/rPfN2o5F3/3TTZPGx1
        dKncoR6NL9qt24jyp9zBm39aHZeFpskSrrI5/0p/wYc6ilHzkHmpUzP02LIPayALVxjw7AGrUeDFK2A5
        Diy+AWZTgPEQmEhkIfTto7RHK2HW/lFMnb8po7uVLnh2gTVSvLoNOIgs5L5E3uaIkYkYGYnJ9N+A/h3w
        9BS4pV07/qxBIaIKrw3RZVwd2mV2DOi2MDobhcoSx6QzhSfeNNQbaaj8KQx7ExCtxtBq8uOKeBElt6eO
        C1lSEcW8JqUvNZswMOGHwRqD2bOPScsOFAs+iA1+9E158esjG1oUDjRKbLglIhK8RHmbMVPEHqFzBoIf
        eCaIHgWw7Eki+R44JEpmgO23WVh20tCukR8sRUBrAuDJvah9+BKlfOPpWbasj8r7SUwXs9RolXgx63qP
        V29J4QEQSgLm8Cm0m2mMOg4gnIuh7WkQvyh8KL9nA6P2cSa/erA3x0DwfYMOrB4zWmRO0E986NXuYGAu
        AoExglbNDuqVPlQ+sOFihxnnuQZ8xTHiG44mU1Q3TBMDKf1j2zMMa4JYWU9gK3yEBfce9PYwBvXrhIED
        d8ft6BhzoWPUTWC7wJO6Ud4+c1LElgsoxlWpMMdAqApi2ZXCazLvnNKEw24yC1v8BNPEWD6/i27CgEMM
        6gac+I5vynxaJ6epvEqx8BxrApwHbmith9h+DWyRwBB2cJAMTPtPoHK+g/BFEi2knetD67jQZQaDpcqc
        qRoUUJ/USOkKngH1Iiv4I3b0TnjRKd8EZ3wL7NFNVAhduCBcwpcdcyhpJ/1zjShtmcVFnv7kHJv84AMD
        mW4HrkAKB2+OEYinYQ/GMLPixtTMBuT6NYinAxCp13FX6QZH7EQZ35g5y5aLcgwEFc3PSJC2sehJYS+R
        mz/JwREQING1xEgaPQkMzkfQqfbjjsyNmvur+JZvPCIMRNRHl+8zmFdHhu70O2CyHyJEMh8hInUgyYUp
        lMVYIA3BfBxcTQgsMoHSrgUU3pBLCn4eKP5vKz+u7C/4ol7RVH3PpG6QrNjbx5z+JoU7envYFq7ue/5X
        2W8G++eNqnHmDVlTXtX/6/wPnIPepY+DnSMAAAAASUVORK5CYII=
</value>
  </data>
</root>